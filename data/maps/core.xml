<?xml version="1.0" encoding="UTF-8"?>
<world>
 <id>2</id>
 <parent>0</parent>
 <owner>7</owner>
 <permissions>075</permissions>
 <location>1</location>
 <properties>
  <entry type="string" key="name">
   <owner>-1</owner>
   <permissions>075</permissions>
   <value>core</value>
  </entry>
 </properties>
 <thing>
  <id>3</id>
  <parent>1</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="looked_at">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>$user.name examines $this.name.</value>
   </entry>
   <entry type="string" key="description">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>You're not sure what it is.</value>
   </entry>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>thing</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>something</value>
   </entry>
  </properties>
  <methods>
   <entry type="moolambda" key="look_self">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(user:notify 'status' nil channel (format "<yellow>$this.title"))
	(user:notify 'status' nil channel (format "<lightgreen>$this.description"))
    ]]></code>
   </entry>
   <entry type="moolambda" key="print_view">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(user:notify 'status' nil channel (format "<b><lightblue>You see $this.name here."))
    ]]></code>
   </entry>
   <entry type="moolambda" key="@eval">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(@eval argstr)
    ]]></code>
   </entry>
   <entry type="moolambda" key="print">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params>text</params>
    <code><![CDATA[(print text)]]></code>
   </entry>
  </methods>
 </thing>
 <thing>
  <id>4</id>
  <parent>3</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>container</value>
   </entry>
  </properties>
 </thing>
 <thing>
  <id>5</id>
  <parent>4</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="self_look_at">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>$this.name looks at himself, quizically.</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>a creature</value>
   </entry>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>mobile</value>
   </entry>
   <entry type="string" key="look_at">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>$user.name looks at you, menicingly.</value>
   </entry>
   <entry type="string" key="looked_at">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>$user.name looks at $this.name.</value>
   </entry>
  </properties>
 </thing>
 <thing>
  <id>6</id>
  <parent>5</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>user</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>someone</value>
   </entry>
  </properties>
  <methods>
   <entry type="moofunc" key="notify">
    <owner>-1</owner>
    <permissions>075</permissions>
    <func>user_notify</func>
   </entry>
  </methods>
 </thing>
 <thing>
  <id>7</id>
  <parent>6</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>wizard</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>a powerful wizard</value>
   </entry>
  </properties>
  <methods>
   <entry type="moofunc" key="@save">
    <owner>-1</owner>
    <permissions>075</permissions>
    <func>builder_save</func>
   </entry>
  </methods>
 </thing>
 <thing>
  <id>8</id>
  <parent>3</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>item</value>
   </entry>
  </properties>
 </thing>
 <thing>
  <id>10</id>
  <parent>4</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="looked_at">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>$user.name looks around the room.</value>
   </entry>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>room</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>someplace</value>
   </entry>
  </properties>
  <methods>
   <entry type="moolambda" key="n">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'north')]]></code>
   </entry>
   <entry type="moolambda" key="e">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'east')]]></code>
   </entry>
   <entry type="moolambda" key="d">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'down')]]></code>
   </entry>
   <entry type="moolambda" key="s">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'south')]]></code>
   </entry>
   <entry type="moolambda" key="w">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'west')]]></code>
   </entry>
   <entry type="moolambda" key="u">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[(this:go 'up')]]></code>
   </entry>
   <entry type="moolambda" key="say">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params>text</params>
    <code><![CDATA[
	(this.contents:foreach (lambda (cur)
		(cur:notify 'say' user channel text)))
    ]]></code>
   </entry>
   <entry type="moolambda" key="go">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params>dir</params>
    <code><![CDATA[

    ]]></code>
   </entry>
  </methods>
 </thing>
 <thing>
  <id>11</id>
  <parent>3</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>exit</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>an exit</value>
   </entry>
  </properties>
 </thing>
 <thing>
  <id>12</id>
  <parent>10</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>cryolocker</value>
   </entry>
   <entry type="string" key="title">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>The Cryolocker</value>
   </entry>
  </properties>
 </thing>
 <thing>
  <id>13</id>
  <parent>1</parent>
  <owner>7</owner>
  <permissions>075</permissions>
  <location>2</location>
  <properties>
   <entry type="string" key="name">
    <owner>-1</owner>
    <permissions>075</permissions>
    <value>channels</value>
   </entry>
  </properties>
  <methods>
   <entry type="moolambda" key="join">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(if (= (this.users:search user) -1)
		(begin
			(this.users:push user)
			(this.users:foreach (lambda (cur)
				(cur:notify 'join' user channel "")))))
    ]]></code>
   </entry>
   <entry type="moolambda" key="leave">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(if (!= (this.users:search user) -1)
		(begin
			(this.users:foreach (lambda (cur)
				(cur:notify 'leave' user channel "")))
			(this.users:remove user)))
    ]]></code>
   </entry>
   <entry type="moolambda" key="quit">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(if (!= (this.users:search user) -1)
		(begin
			; TODO there should only be one quit message per user but we can only control the channel's quit...
			;(this.users:foreach (lambda (cur)
			;	(cur:notify 'quit' user channel "")))
			(this.users:remove user)))
    ]]></code>
   </entry>
   <entry type="moolambda" key="say">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params>text</params>
    <code><![CDATA[
	(this.users:foreach (lambda (cur)
		(cur:notify 'say' user channel text)))
    ]]></code>
   </entry>
   <entry type="moolambda" key="emote">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params>text</params>
    <code><![CDATA[
	(this.users:foreach (lambda (cur)
		(cur:notify 'emote' user channel text)))
    ]]></code>
   </entry>
   <entry type="moolambda" key="names">
    <owner>-1</owner>
    <permissions>075</permissions>
    <params></params>
    <code><![CDATA[
	(define names "")
	(this.users:foreach (lambda (cur)
		(set names (concat names cur.name " "))))
	;(chop names)
    ]]></code>
   </entry>
   <entry type="moofunc" key="evaluate">
    <owner>-1</owner>
    <permissions>075</permissions>
    <func>channel_evaluate</func>
   </entry>
  </methods>
  <thing type="channel">
   <id>14</id>
   <parent>13</parent>
   <owner>7</owner>
   <permissions>075</permissions>
   <location>13</location>
   <properties>
    <entry type="array" key="users">
     <owner>-1</owner>
     <permissions>075</permissions>
    </entry>
    <entry type="string" key="name">
     <owner>-1</owner>
     <permissions>075</permissions>
     <value>#help</value>
    </entry>
   </properties>
   <name>#help</name>
  </thing>
  <thing type="channel">
   <id>15</id>
   <parent>13</parent>
   <owner>7</owner>
   <permissions>075</permissions>
   <location>13</location>
   <properties>
    <entry type="array" key="users">
     <owner>-1</owner>
     <permissions>075</permissions>
    </entry>
    <entry type="string" key="name">
     <owner>-1</owner>
     <permissions>075</permissions>
     <value>#wartalk</value>
    </entry>
   </properties>
   <name>#wartalk</name>
  </thing>
  <thing type="channel">
   <id>16</id>
   <parent>13</parent>
   <owner>7</owner>
   <permissions>075</permissions>
   <location>13</location>
   <properties>
    <entry type="array" key="users">
     <owner>-1</owner>
     <permissions>075</permissions>
    </entry>
    <entry type="string" key="name">
     <owner>-1</owner>
     <permissions>075</permissions>
     <value>#realm</value>
    </entry>
   </properties>
   <methods>
    <!--<entry type="moolambda" key="join">
     <owner>-1</owner>
     <permissions>075</permissions>
     <params></params>
     <code><![CDATA[
	;(super join)
	;($cryolocker:fetch user)	; I have no idea how this would work
     ]]></code>
    </entry>-->
    <entry type="moolambda" key="say">
     <owner>-1</owner>
     <permissions>075</permissions>
     <params>text</params>
     <code><![CDATA[
	(user.location:say text)
     ]]></code>
    </entry>
    <entry type="moolambda" key="emote">
     <owner>-1</owner>
     <permissions>075</permissions>
     <params>text</params>
     <code><![CDATA[
	(user.location:emote text)
     ]]></code>
    </entry>
    <entry type="moofunc" key="evaluate">
     <owner>-1</owner>
     <permissions>075</permissions>
     <func>realm_evaluate</func>
    </entry>
   </methods>
   <name>#realm</name>
  </thing>
 </thing>
</world>
